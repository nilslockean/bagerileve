---
import {
  consolidateOpeningHours,
  formatConsolidatedDays,
  formatDay,
} from "@lib/openingHoursUtils";
import type { OpeningHours } from "@lib/schemas/OpeningHoursSchema";
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"div"> {
  data: OpeningHours;
  title?: string;
  irregularLimit?: number;
  consolidated?: boolean;
}

const {
  data,
  title,
  irregularLimit,
  consolidated,
  class: className,
} = Astro.props;
const hasIrregularHours = data.irregular && data.irregular.length > 0;
const consolidatedHours = consolidateOpeningHours(data.days);
---

{title && <h4>{title}</h4>}

<div class:list={["@container", className]}>
  <table class="table-auto w-full text-lg">
    {
      consolidated
        ? consolidatedHours.map((row) => (
            <tr class="border-b-2 border-current last:border-none">
              <td class="py-2">{formatConsolidatedDays(row)}</td>
              <td class="text-right py-2">
                {row.closed ? "stängt" : row.time}
              </td>
            </tr>
          ))
        : Object.values(data.days).map((row) => (
            <tr class="border-b-2 border-current last:border-none">
              <td class="py-2">{formatDay(row.day)}</td>
              <td class="text-right py-2">
                {row.closed ? "stängt" : row.time}
              </td>
            </tr>
          ))
    }
  </table>

  {
    data.irregular && data.irregular.length > 0 && irregularLimit !== 0 && (
      <>
        <p class="mt-4 uppercase text-sm font-futura tracking-wider mb-0">
          Avvikande öppettider:
        </p>
        <table class="table-auto w-full">
          {data.irregular.slice(0, irregularLimit).map((row) => (
            <tr class="border-b @xl:border-b-2 border-current last:border-none">
              <td class="py-1">
                {row.formattedDate || row.date}
                <br />
                {row.name !== undefined && (
                  <small class="opacity-75">{row.name}</small>
                )}
              </td>
              <td class="text-right py-1 align-baseline">
                {row.closed ? "stängt" : row.time}
              </td>
            </tr>
          ))}
        </table>
      </>
    )
  }

  {hasIrregularHours && <slot name="has-irregular" />}
</div>
