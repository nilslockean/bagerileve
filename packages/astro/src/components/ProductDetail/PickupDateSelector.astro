---
import type { HTMLAttributes } from "astro/types";
import type { Product } from "@lib/schemas/Product";
import { capitalize } from "@lib/stringUtils";

interface Props extends HTMLAttributes<"fieldset"> {
  product: Product;
  defaultPickupDates: string[];
}

const { product, defaultPickupDates, class: className, ...rest } = Astro.props;

const dateFormatter = new Intl.DateTimeFormat("sv-SE", {
  dateStyle: "full",
});
function formatDate(dateStr: string) {
  const formattedDate = dateFormatter.format(new Date(dateStr));
  return capitalize(formattedDate);
}
---

<fieldset {...rest}>
  <legend>Tillgänglighet</legend>
  {
    product.pickupDates && product.pickupDates.length > 0 ? (
      <p>{product.title} endast att hämta under specifika datum.</p>
    ) : (
      <>
        <p>
          {product.title} går att hämta under våra öppettider med minst två
          dagars framförhållning, och max 30 dagar in i framtiden.
        </p>
      </>
    )
  }

  <select>
    <option value="" selected={defaultPickupDates.length !== 1}>
      {
        defaultPickupDates.length === 0
          ? "Inga datum tillgängliga"
          : "Välj datum för upphämtning"
      }
    </option>
    {
      defaultPickupDates.map((dateStr, i) => (
        <option
          value={dateStr}
          selected={defaultPickupDates.length === 1 && i === 0}
        >
          {formatDate(dateStr)}
        </option>
      ))
    }
  </select>
</fieldset>
