---
import { fetchCourses } from "@lib/fienta";
import { EventScopeSchema } from "@lib/schemas/EventScope.ts";
import { z } from "astro:content";
import { FIENTA_API_KEY } from "astro:env/server";
import CourseList from "@components/CourseList.astro";

export const partial = true;
export const prerender = false;
const { searchParams } = Astro.url;

const BooleanSchema = z.enum(["true", "false"]);
const ParamsSchema = z.object({
  scope: EventScopeSchema.catch("upcoming"),
  showError: BooleanSchema.catch("false"),
  showEmpty: BooleanSchema.catch("false"),
});
const params = ParamsSchema.parse({
  scope: searchParams.get("scope"),
  showError: searchParams.get("showError"),
  showEmpty: searchParams.get("showEmpty"),
});

const courses = await fetchCourses(params.scope, FIENTA_API_KEY);
---

{
  courses.status === "success" && (
    <CourseList
      courses={courses.courses}
      scope={params.scope}
      showEmpty={params.showEmpty === "true"}
    />
  )
}

{
  courses.status === "error" && params.showError === "true" && (
    <>
      <p>Problem med att h√§mta kurser:</p>
      <p>{courses.message}</p>
    </>
  )
}
